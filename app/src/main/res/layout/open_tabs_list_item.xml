<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    tools:ignore="Rtlsymmetry">

    <LinearLayout
        android:id="@+id/tabs_item_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_toStartOf="@id/tabs_item_delete"
        android:padding="8dp"
        android:orientation="vertical">

        <TextView
            android:id="@+id/tabs_item_title"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:maxLines="2"
            android:ellipsize="end"
            android:textAppearance="?android:textAppearanceMedium"
            tools:text="My mechanism consists of passing the listener as a parameter to the constructor and then assign it" />

        <TextView
            android:id="@+id/tabs_item_url"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:ellipsize="end"
            android:singleLine="true"
            android:textAppearance="?android:textAppearanceSmall"
            android:textColor="?android:textColorSecondary"
            tools:text="There is a common pattern I use in all of my RecyclerView adapters to listen for click events on each item. " />

    </LinearLayout>

    <ImageView
        android:id="@+id/tabs_item_delete"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignBottom="@id/tabs_item_layout"
        android:background="?tabCloseButtonBackground"
        android:contentDescription="@string/simply_image"
        android:scaleType="center"
        android:src="@drawable/btn_close_tab" />

</RelativeLayout>